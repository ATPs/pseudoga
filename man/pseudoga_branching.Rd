% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pseudoga_branching.R
\name{pseudoga_branching}
\alias{pseudoga_branching}
\title{Function to perform branching}
\usage{
pseudoga_branching(
  sce,
  type = c("counts", "nomralized", "expression"),
  ntest = 50,
  repl = 3,
  subsample = 100,
  minit = 30,
  epsilon = 1e-04,
  normalization = c("default", "TMM", "quant", "cpm"),
  nnprop = 0.3
)
}
\arguments{
\item{sce}{A SingleCellExpression object. The slot "assays" must contain one of the followings: "count" (count data), "normalized" (normalized data), "expression" (neither count data nor normalized data). The slot "colData" must contain a variable named "cluster" that contains cluster ids of individual cells.}

\item{type}{Type of expression data to be analyzed. It should assume one of these values: "counts", "normalized", "expression". Default is "counts".}

\item{ntest}{Size of each generation considered in genetic algorithm is (8*ntest) . Default value for ntest is 50.}

\item{repl}{Number of independent pseudotime estimates used to calculate final trajectory. Default value is 3.}

\item{minit}{Minimum number of generations considered in genetic algorithm. Default value is 30.}

\item{epsilon}{The tolerance value used in convergence. Default value is \eqn{10^{-4}}.}

\item{normalization}{Normalization method applied on the input dataset. It must be one of the following "default" (DESeq Normalization), "TMM" (TMM Normalization), "quant" (Quantile Normalization) or "cpm" (Counts Per Million).}

\item{nnprop}{Proportion of sample size used as value of k for kNN smoothing. If subsample size is N, (N*nnprop) is considered as value of k. Default value is 0.3.}

\item{subset}{Number of cells used in each of the independent pseudotime estimation. Default value is 100. For larger datasets, larger values are recommended.}
}
\value{
An igraph object with cells as nodes. Consecutive cells connected with edges can be considered as a path.
}
\description{
This function produces a tree structure with cells as nodes.This graph can be used to detect branching.
}
\examples{
\dontrun{
library(SingleCellExperiment)
counts <- matrix(rpois(30000, lambda = 10), ncol=300, nrow=100)
sce <- SingleCellExperiment(list(counts=counts))
km<-kmeans(t(counts),3)
colData(sce)$cluster<-km$cluster
gr<-pseudoga_branching(sce)
}
}
